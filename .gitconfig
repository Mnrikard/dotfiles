[user]
	name = Matthew Rikard
	email = mnrikard@gmail.com
[push]
	default = current
[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true
[core]
	editor = nvim
	excludesfile = ~/.gitignore
[merge]
	tool = nvimdiff
	conflictstyle = diff3
[diff]
	tool = nvimdiff
	conflictstyle = diff2
[http]
	sslVerify = true
[winUpdater]
	recentlySeenVersion = 2.20.1.windows.1
[url "git@github.com:acst/"]
	insteadOf = https://github.com/acst/
[alias]
	pullall = "!f(){ git pull \"\" && git submodule update --init --recursive; };"
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	su = submodule update --recursive
	si = submodule update --init --recursive
	revertall = !git reset --hard HEAD; git clean -df
	gettrunk = !git remote show origin | grep 'HEAD branch' | sed 's/.*: //g'
    tobaseold = "!f(){ git reset --hard HEAD; git clean -df; git fetch -p; master=$(git gettrunk); git checkout $master; git pull origin $master; git si;}; f;"
    tobase = "!f(){ echo \"resetting current branch\";git reset --hard HEAD; git clean -df; git fetch -p; echo \"git checkout $(git gettrunk)\";git checkout $(git gettrunk); git pull origin $(git gettrunk); git si;}; f;"

    stache = "!f(){ read -p 'Describe this stash: ' descStache; git stash push --include-untracked -m \"$descStache\"; }; f;"
	opendiff = "!f(){ nvim $(git --no-pager diff --name-only $(git gettrunk)); }; f;"
	awayfrom = "log --left-right --graph --cherry-pick --oneline"
	bindingredirect = "!f(){ for file in $(git diff --name-only | grep config);do;git diff -w $file;echo Restore:[yN];read resto;if [[ $resto == y ]];then;git restore $file;fi;done; }; f;"
	cleanbranches = "!f(){ git branch --merged $(git gettrunk) | grep --invert-match \"$(git gettrunk)\" | xargs -n 1 -r git branch -d; }; f;"
